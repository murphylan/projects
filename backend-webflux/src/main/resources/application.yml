# WebFlux Application Configuration
spring:
  application:
    name: yzt-webflux-backend
  
  profiles:
    active: dev
    
  # R2DBC Database Configuration (响应式数据库)
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/yzt_webflux_db
    username: ${DB_USERNAME:yzt_user}
    password: ${DB_PASSWORD:yzt_password}
    pool:
      initial-size: 10
      max-size: 50
      max-idle-time: 30m
      validation-query: SELECT 1
      
  # MongoDB Reactive Configuration
  data:
    mongodb:
      uri: mongodb://localhost:27017/yzt_webflux_mongo
      auto-index-creation: true
      
  # Redis Reactive Configuration
  redis:
    host: localhost
    port: 6379
    password: ${REDIS_PASSWORD:}
    database: 1  # 使用不同的数据库避免冲突
    lettuce:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 5
        max-wait: -1ms
    timeout: 6000ms
    
  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true
    consumer:
      group-id: yzt-webflux-backend
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: com.yzt.webflux.dto
        
  # RabbitMQ Configuration
  rabbitmq:
    host: localhost
    port: 5672
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: /webflux
    
  # Security Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:}
            client-secret: ${GOOGLE_CLIENT_SECRET:}
            scope: profile,email
            
  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 60000
      
  # WebFlux Configuration
  webflux:
    base-path: /api/v1
    
  # Actuator Configuration
  management:
    endpoints:
      web:
        exposure:
          include: health,info,metrics,prometheus,env
    endpoint:
      health:
        show-details: when_authorized
    metrics:
      export:
        prometheus:
          enabled: true
          
# Server Configuration (Netty)
server:
  port: 8081  # 不同端口避免冲突
  netty:
    connection-timeout: 20s
    h2c-max-content-length: 0B
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    
# Logging Configuration
logging:
  level:
    com.yzt.webflux: INFO
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.r2dbc: DEBUG
    io.r2dbc.postgresql: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/yzt-webflux-backend.log
    
# Custom Application Properties
app:
  jwt:
    secret: ${JWT_SECRET:your-very-long-secret-key-here-that-should-be-at-least-256-bits}
    expiration: 86400000 # 24 hours
    refresh-expiration: 604800000 # 7 days
  cors:
    allowed-origins: 
      - http://localhost:3000
      - http://localhost:3001
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  file:
    upload-dir: ${FILE_UPLOAD_DIR:./uploads}
    max-size: 10MB
  api:
    rate-limit:
      enabled: true
      requests-per-minute: 100  # WebFlux 可以处理更多请求
      
# SpringDoc Configuration for WebFlux
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
  show-actuator: true
  
---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
      
  # Development Database
  r2dbc:
    url: r2dbc:h2:mem:///devdb
    username: sa
    password: password
    
  # Development MongoDB
  data:
    mongodb:
      uri: mongodb://localhost:27017/yzt_webflux_dev
      
logging:
  level:
    com.yzt.webflux: DEBUG
    
---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
      
  r2dbc:
    url: r2dbc:h2:mem:///testdb
    username: sa
    password: password
    
  data:
    mongodb:
      uri: mongodb://localhost:27017/yzt_webflux_test
      
---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
      
logging:
  level:
    com.yzt.webflux: WARN
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.springframework.r2dbc: WARN