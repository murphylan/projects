plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'checkstyle'
    id 'jacoco'
}

group = 'com.murphy.webflux'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('testcontainersVersion', "1.20.2")
}

dependencies {
    // Spring Boot WebFlux Starters - 响应式栈
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    
    // Reactive Database Drivers
    implementation 'io.r2dbc:r2dbc-postgresql'
    implementation 'io.r2dbc:r2dbc-pool'
    runtimeOnly 'io.r2dbc:r2dbc-h2' // For development
    
    // Security & JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    
    // Documentation for WebFlux
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.6.0'
    
    // Reactive Message Queue
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.projectreactor.kafka:reactor-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    
    // Monitoring & Observability
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    
    // Reactive JSON Processing
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    
    // Utilities
    implementation 'org.apache.commons:commons-lang3'
    implementation 'com.google.guava:guava:33.3.1-jre'
    implementation 'org.mapstruct:mapstruct:1.6.2'
    
    // Dev Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    
    // Annotation Processing
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'
    compileOnly 'org.projectlombok:lombok'
    
    // Testing - Reactive Testing Support
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:r2dbc'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation 'org.testcontainers:kafka'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:3.0.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

// Checkstyle configuration
checkstyle {
    toolVersion = '10.18.2'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    maxWarnings = 0
    maxErrors = 0
}

// JaCoCo configuration
jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
    }
}

// Spring Boot configuration
springBoot {
    buildInfo()
}

// Custom tasks
task bootRunDev(type: org.springframework.boot.gradle.tasks.run.BootRun) {
    group = 'application'
    description = 'Run the WebFlux application with dev profile'
    mainClass = 'com.yzt.webflux.YztWebFluxApplication'
    args = ['--spring.profiles.active=dev']
}

task bootRunProd(type: org.springframework.boot.gradle.tasks.run.BootRun) {
    group = 'application'
    description = 'Run the WebFlux application with prod profile'
    mainClass = 'com.yzt.webflux.YztWebFluxApplication'
    args = ['--spring.profiles.active=prod']
}